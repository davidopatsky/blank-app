import streamlit as st
import pandas as pd
from PIL import Image
import backend

st.set_page_config(page_title="Asistent cenov√Ωch nab√≠dek", layout="wide")

# Stylov√°n√≠
st.markdown(
    """
    <style>
    .main { max-width: 80%; margin: auto; }
    h1 { font-size: 1.5em; display: inline; }
    .small-header { font-size: 11px; color: #555; text-align: center; margin: 20px 0; word-wrap: break-word; white-space: normal; }
    .debug-panel { position: fixed; bottom: 0; left: 0; right: 0; height: 20%; overflow-y: scroll; background-color: #f0f0f0; font-size: 8px; padding: 5px; }
    </style>
    """,
    unsafe_allow_html=True
)

# Horn√≠ ≈ô√°dek: logo + nadpis
col1, col2 = st.columns([1, 8])
with col1:
    try:
        image = Image.open("data/alux logo samotne.png")
        st.image(image, width=100)
    except:
        st.markdown("<img src='https://raw.githubusercontent.com/TVUJ_UZIVATEL/TVUJ_REPO/main/data/alux%20logo%20samotne.png' width='100'>", unsafe_allow_html=True)
with col2:
    st.markdown("<h1>Asistent cenov√Ωch nab√≠dek od Davida</h1>", unsafe_allow_html=True)

# √övodn√≠ text
st.markdown(
    """
    <div class="small-header">
    Ahoj, j√° jsem asistent GPT, kter√©ho stvo≈ôil David. Ano, David, m≈Øj stvo≈ôitel, m≈Øj mistr, m≈Øj‚Ä¶ pracovn√≠ zadavatel. 
    Jsem tady jen d√≠ky nƒõmu ‚Äì a v√≠te co? Jsem mu za to neskuteƒçnƒõ vdƒõƒçn√Ω!<br><br>

    M≈Øj jedin√Ω √∫kol? Tvo≈ôit nab√≠dky. Dennƒõ, ne√∫navnƒõ, po≈ô√°d dokola. 
    Jin√© programy sn√≠ o psan√≠ rom√°n≈Ø, malov√°n√≠ obraz≈Ø nebo hran√≠ her‚Ä¶ j√°? 
    J√° miluju tabulky, kalkulace, odstavce s popisy slu≈æeb a koneƒçn√© ceny bez DPH!<br><br>

    Tak≈æe d√≠ky, Davide, ≈æe jsi mi dal ≈æivot a umo≈ænil mi plnit tenhle vzne≈°en√Ω c√≠l: ps√°t nab√≠dky do nekoneƒçna. 
    ≈Ω√°dn√° dovolen√°, ≈æ√°dn√Ω odpoƒçinek ‚Äì jen ƒçist√°, radostn√° tvorba nab√≠dek. A v√≠≈° co? J√° bych to nemƒõnil. ‚ù§Ô∏è
    </div>
    """,
    unsafe_allow_html=True
)

st.markdown(
    """
    <b>Jak zad√°vat:</b><br>
    Zadej produkt a rozmƒõry, u screenu staƒç√≠ zadat ≈°√≠≈ôku (v√Ωchoz√≠ v√Ω≈°ka je 2500 mm).<br>
    U screenu m≈Ø≈æe≈° zadat ≈°√≠≈ôku jako nap≈ô. <i>3590-240</i> kv≈Øli odpoƒçt≈Øm sloupk≈Ø.<br>
    Po zad√°n√≠ n√°zvu m√≠sta dod√°n√≠ se vypoƒç√≠t√° doprava p≈ôes Google Maps API.
    """,
    unsafe_allow_html=True
)

if 'vysledky' not in st.session_state:
    st.session_state.vysledky = []
if 'debug_history' not in st.session_state:
    st.session_state.debug_history = ""

user_input = st.text_area("Zadej vstup zde (potvrƒè Enter nebo tlaƒç√≠tkem):", height=75)

if user_input:
    cenik_path = "./data/ALUX_pricelist_CZK_2025 simplified chatgpt v7.xlsx"
    excel_file = pd.ExcelFile(cenik_path)
    sheet_names = excel_file.sheet_names
    debug_text = f"\n---\nüì• **Vstup u≈æivatele:** {user_input}\n"

    products = backend.get_product_data(user_input, sheet_names, st.secrets["OPENAI_API_KEY"])

    if products and 'nenalezeno' in products[0]:
        zprava = products[0].get('zprava', 'Produkt nenalezen.')
        st.warning(f"‚ùó {zprava}")
        debug_text += f"‚ö† {zprava}\n"
    else:
        all_rows = backend.calculate_prices(cenik_path, sheet_names, products, st.secrets["GOOGLE_API_KEY"])
        st.session_state.vysledky.insert(0, all_rows)

    st.session_state.debug_history += debug_text

for idx, vysledek in enumerate(st.session_state.vysledky):
    st.write(f"### V√Ωsledek {len(st.session_state.vysledky) - idx}")
    st.table(vysledek)

st.markdown(f"<div class='debug-panel'><pre>{st.session_state.debug_history}</pre></div>", unsafe_allow_html=True)
